html
  head
    title Chapter 3
  body
    include ../shared/navbar.pug
    header
      h1 Chapter 3 - Functions
      ul
        li 
          a(href="#minimum") Minimum
        li 
          a(href="#recursion") Recursion
    section#minimum
      h2 Minimum
      p The previous chapter introduced the standard function Math.min that returns its smallest argument. We can build something like that now. Write a function min that takes two arguments and returns their minimum.
      .form-group
        label First element: 
        input#first(type="number")
      .form-group
        label Second element: 
        input#second(type="number")
      footer
        p
          strong Result: 
          span#result 0
    section#recursion
      h2 Recursion 
      p We’ve seen that % (the remainder operator) can be used to test whether a number is even or odd by using % 2 to see whether it’s divisible by two. Here’s another way to define whether a positive whole number is even or odd:
      ul
        li Zero is even.
        li One is odd.
        li For any other number N, its evenness is the same as N - 2.
      p Define a recursive function isEven corresponding to this description. The function should accept a single parameter (a positive, whole number) and return a Boolean.
      p Test it on 50 and 75. See how it behaves on -1. Why? Can you think of a way to fix this?
      .form-group
        label Value: 
        input#recursion-input(type="number")
      footer
        p
          strong Result: 
          span#recursion-result Input any number above.
      details
        summary Solution
        pre
          | const isEven = function (value) {
          |   const absoluteValue = Math.abs(value);
          |   
          |   if (absoluteValue === 0) return true;
          |   if (absoluteValue === 1) return false;
          |   
          |   return isEven(absoluteValue - 2);
          | }


script(type='text/javascript', src='/static/chapter-3.js')  
      